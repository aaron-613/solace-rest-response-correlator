/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'idea'
    id 'eclipse'
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

// Download context sensitive help and/or source code for eclipse and idea
eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
    jdt {
        //if you want to alter the java versions (by default they are configured with gradle java plugin settings):
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    // Solace Messaging API for Java Dependencies
    implementation group: 'com.solacesystems', name: 'sol-jcsmp', version: '10.12.1'    // new improved logging framework, log4j2
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
    // needed to 'bridge' the JCSMP API logs from JCL to log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: '2.14.1'
    // include this next one if you want to use JsonLayout for log4j
    //implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.4'

    //implementation group: 'javax.json', name: 'javax.json-api', version: '1.1.4'
    implementation group: 'org.glassfish', name: 'javax.json', version: '1.1.4'
    //implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'


    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is used by the application.
    //implementation 'com.google.guava:guava:29.0-jre'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
}

tasks.withType(JavaCompile).all {
    options.compilerArgs.add("-Xlint:all")
}

application {
    // Define the main class for the application.
    mainClass = 'com.solace.aaron.restQ.SolaceRestQueueConsumer'
}
